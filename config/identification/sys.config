[
    {kernel, [
        {log_level, info},
        {logger, [
            {handler, default, logger_std_h, #{
                level => debug,
                config => #{
                    type => {file, "/var/log/identity/console.json"},
                    sync_mode_qlen => 20
                },
                formatter => {logger_logstash_formatter, #{}}
            }}
        ]}
    ]},

    {scoper, [
        {storage, scoper_storage_logger}
    ]},

    {identification, [
        {ip, "::"},
        {port, 8022},
        {protocol_opts, #{
            request_timeout => 5000
        }},
        {handlers, #{
            identification => #{
                path => <<"/v1/identification">>
                %% handler_limits => Limits
            },
            identification_judge => #{
                path => <<"/v1/identification-judge">>
                %% handler_limits => Limits
            }
        }},
        {machines, #{
            identity => #{
                path => <<"/v1/stateproc/identity">>
                %% handler_limits => Limits
            },
            claim => #{
                path => <<"/v1/stateproc/identity-claim">>
                %% handler_limits => Limits
            }
        }},
        {clients, #{
            automaton => #{
                url => <<"http://machinegun:8022/v1/automaton">>,
                namespaces => #{
                    identity => <<"identity">>,
                    claim    => <<"identity-claim">>
                }
                %% transport_opts => Opts
            },
            proof_service => #{
                url => <<"http://uprid:8080/v1/api">>
                %% transport_opts => Opts
            },
            proof_storage => #{
                url => <<"http://cds:8022/v1/identity_document_storage">>
                %% transport_opts => Opts
            }
        }},
        {health_check, #{
            disk    => {erl_health, disk     , ["/", 99]       },
            memory  => {erl_health, cg_memory, [99]            },
            service => {erl_health, service  , [<<"identification">>]}
        }}
    ]}
].
