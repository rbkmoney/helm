replicas: 1
image:
  repository: grafana/grafana
  tag: 7.2.1
  sha: ""
  pullPolicy: IfNotPresent

  #extraEmptyDirMounts:
  #- name: dashboard-dir
  #  mountPath: /var/lib/grafana/dashboards/general

extraInitContainers: []
#  - name: dashboard-autosync
#    image: alpine/git:v2.26.2
#    imagePullPolicy: IfNotPresent
#    args: [ "clone", "-b", "{{ .Values.sidecar.autosync.branch }}", "{{ .Values.sidecar.autosync.repos }}", "/git/dashboards" ]
#    env:
#      - name: GIT_SSH_COMMAND
#        value: "ssh -o 'StrictHostKeyChecking no' -i /etc/synckey/synckey"
#    volumeMounts:
#      - name: dashboard-dir
#        mountPath: "/git/dashboards/"
#      - name: sync-key
#        mountPath: "/etc/synckey"
#        readOnly: true

## Enable an Specify container in extraContainers. This is meant to allow adding an authentication proxy to a grafana pod
extraContainers: |
  - name: dashboard-autosync
    image: alpine/git:v2.26.2
    imagePullPolicy: IfNotPresent
    args:
    - clone
    - -b
    - dashboard/release
    - git@github.com:rbkmoney/grafana-jsonnet.git
    - /git/dashboards  
    env:
      - name: GIT_SSH_COMMAND
        value: "ssh -o 'StrictHostKeyChecking no' -i /etc/synckey/synckey"
    volumeMounts:
      - name: dashboard-dir
        mountPath: "/git/dashboards"
      - name: sync-key
        mountPath: "/etc/synckey"
        readOnly: true
 
securityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0
  fsGroupChangePolicy: "OnRootMismatch"
extraContainerVolumes: 
  - name: dashboard-dir
    emptyDir: {}
  - name: sync-key
    secret:
      secretName: grafana-env
      defaultMode: 0600

envRenderSecret: 
  synckey: |
    <your ssh-privat key>
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: rbkm-elasticsearch
      type: elasticsearch
      database: "filebeat-*"
      url: https://rbk-es-http:9200
      basicAuth: true
      basicAuthUser: elastic
      jsonData:
        timeField: "@timestamp"
        esVersion: 70
        tlsSkipVerify: true
      secureJsonData:
        basicAuthPassword: $ELASTIC_PASS

dashboardProviders: 
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'general'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards

grafana.ini:
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net

sidecar:
  image:
    repository: kiwigrid/k8s-sidecar
    tag: 1.1.0
    sha: ""
  imagePullPolicy: IfNotPresent
  resources: {}
  enableUniqueFilenames: false
  dashboards:
    enabled: false
    SCProvider: true
    label: grafana_dashboard
    folder: /tmp/dashboards
    defaultFolderName: null
    searchNamespace: null
    folderAnnotation: null
    provider:
      name: sidecarProvider
      orgid: 1
      folder: ''
      type: file
      disableDelete: false
      allowUiUpdates: false
      foldersFromFilesStructure: false
  datasources:
    enabled: false
    label: grafana_datasource
    searchNamespace: null
  notifiers:
    enabled: false
    label: grafana_notifier
    searchNamespace: null
revisionHistoryLimit: 10

imageRenderer:
  enabled: false
  replicas: 1
  image:
    repository: grafana/grafana-image-renderer
    tag: latest
    sha: ""
    pullPolicy: Always
  env:
    - name: ELASTIC_PASS
      valueFrom:
        secretKeyRef:
          name: rbk-es-elastic-user
          key: elastic
  securityContext: {}
  hostAliases: []
  priorityClassName: ''
  service:
    portName: 'http'
    port: 8081
  podPortName: http
  revisionHistoryLimit: 10
  networkPolicy:
    limitIngress: true
    limitEgress: false
  resources: {}
