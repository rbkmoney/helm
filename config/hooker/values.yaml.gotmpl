# -*- mode: yaml -*-

replicaCount: 1

image:
  repository: docker.io/rbkmoney/hooker
  tag: dc15f448d473c03b7c379a9f0338e8210bc1606a
  pullPolicy: IfNotPresent

runopts:
  command: ["/opt/hooker/entrypoint.sh"]

configMap:
  data: 
    entrypoint.sh: |
      {{- readFile "entrypoint.sh" | nindent 6 }}
    loggers.xml: |
      {{- readFile "loggers.xml" | nindent 6 }}
    logback.xml: |
      {{- readFile "../logs/logback.xml" | nindent 6 }}

livenessProbe:
  httpGet:
    path: /actuator/health
    port: management
readinessProbe:
  httpGet:
    path: /actuator/health
    port: management

service:
  ports:
    - name: api
      port: 8022
    - name: management
      port: 8023

volumeMounts:
  - name: config-volume
    mountPath: /opt/hooker/entrypoint.sh
    subPath: entrypoint.sh
    readOnly: true
  - name: config-volume
    mountPath: /opt/hooker/logback.xml
    subPath: logback.xml
    readOnly: true
  - name: config-volume
    mountPath: /opt/hooker/loggers.xml
    subPath: loggers.xml
    readOnly: true

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}
      defaultMode: 0755

podAnnotations:
  vault.hashicorp.com/role: "db-app"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/agent-inject-secret-application.properties: "database/creds/db-app-hook"
  vault.hashicorp.com/agent-inject-template-application.properties: |
    {{`{{- with secret "database/creds/db-app-hook" }}
    spring.datasource.url=jdbc:postgresql://postgres-postgresql:5432/hook?sslmode=disable
    spring.datasource.username={{ .Data.username }}
    spring.datasource.password={{ .Data.password }}
    spring.flyway.url=jdbc:postgresql://postgres-postgresql:5432/hook?sslmode=disable
    spring.flyway.user={{ .Data.username }}
    spring.flyway.password={{ .Data.password }}
    {{- end }}`}}



ciliumPolicies:
- filters:
  - port: 8200
    type: TCP
  name: vault
  namespace: default
- filters:
  - port: 5432
    type: TCP
  name: postgresql
  namespace: default
- filters:
  - port: 9092
    rules:
      kafka:
        consume:
        - mg-events-customer
        - mg-events-invoice
    type: TCP
  name: kafka
  namespace: default
