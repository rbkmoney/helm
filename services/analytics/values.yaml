image:
  repository: docker.io/rbkmoney/analytics
  pullPolicy: IfNotPresent

imagePullSecrets: []

replicaCount: 1

nameOverride: ""
fullnameOverride: ""

podSecurityContext: {}
# fsGroup: 2000

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels:
  prometheus.metrics.java.enabled: "true"

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  ports:
    api: 8022
    management: 8023

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

kafka:
  bootstrapServers: kafka-headless:9092
  topicConcurrency: 7
  topicPrefix: analytics-v10
  topicInvoiceName: mg-events-invoice
  topicPayoutName: payout
  topicPartyName: mg-events-party

columbus:
  url: http://columbus.default.svc.cluster.local:8022/repo
  networkTimeout: 60000
hellgate:
  url: http://hellgate.default.svc.cluster.local:8022/v1/processing/invoicing
  networkTimeout: 60000
payouter:
  url: http://payouter.default.svc.cluster.local:8022/payout/management
  networkTimeout: 60000
dominant:
  url: http://dominant.default.svc.cluster.local:8022/v1/domain/repository_client
  networkTimeout: 60000

datasource:
  poolsize: 20
